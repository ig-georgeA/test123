@page "/stepper"
@using Northwind
@using Models.Northwind
@inject INorthwindService NorthwindService

<div class="column-layout stepper-container">
    <IgbStepper TitlePosition="StepperTitlePosition.Bottom" @ref="_stepper" class="stepper" stepper-scope>
        <IgbStep Invalid="true">
            <div class="column-layout step-content">
                <div class="column-layout group">
                    <div class="row-layout group">
                        <IgbInput Label="Label/Placeholder" Outlined="true" class="input" stepper-scope>
                            <span slot="prefix">
                                <span class="material-icons icon">
                                    person
                                </span>
                            </span>
                        </IgbInput>
                        <IgbInput DisplayType="InputType.Password" Label="Password" Outlined="true" class="input" stepper-scope>
                            <span slot="prefix">
                                <span class="material-icons icon">
                                    lock
                                </span>
                            </span>
                        </IgbInput>
                        <IgbInput Label="Label/Placeholder" Outlined="true" class="input" stepper-scope></IgbInput>
                    </div>
                    <IgbButton Size="SizableComponentSize.Large" class="button button_2" stepper-scope>
                        Some action
                        <IgbRipple></IgbRipple>
                    </IgbButton>
                </div>
                <IgbGrid Data="@_northwindEmployees" PrimaryKey="EmployeeID" DisplayDensity="DisplayDensity.Cosy" AllowFiltering="true" FilterMode="FilterMode.ExcelStyleFilter" AutoGenerate="false" class="ig-typography grid" stepper-scope>
                    <IgbColumn Field="LastName" DataType="GridColumnDataType.String" Header="lastName" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="EmployeeID" DataType="GridColumnDataType.Number" Header="employeeID" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="FirstName" DataType="GridColumnDataType.String" Header="firstName" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Title" DataType="GridColumnDataType.String" Header="title" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="TitleOfCourtesy" DataType="GridColumnDataType.String" Header="titleOfCourtesy" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="BirthDate" DataType="GridColumnDataType.Date" Header="birthDate" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="HireDate" DataType="GridColumnDataType.Date" Header="hireDate" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.Street" DataType="GridColumnDataType.String" Header="address street" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.City" DataType="GridColumnDataType.String" Header="address city" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.Region" DataType="GridColumnDataType.String" Header="address region" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.PostalCode" DataType="GridColumnDataType.String" Header="address postalCode" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.Country" DataType="GridColumnDataType.String" Header="address country" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Address.Phone" DataType="GridColumnDataType.String" Header="address phone" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="ManagerID" DataType="GridColumnDataType.Number" Header="managerID" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="Notes" DataType="GridColumnDataType.String" Header="notes" Sortable="true" Selectable="false"></IgbColumn>
                    <IgbColumn Field="AvatarUrl" DataType="GridColumnDataType.String" Header="avatarUrl" Sortable="true" Selectable="false"></IgbColumn>
                </IgbGrid>
            </div>
            <p slot="title">Address</p>
        </IgbStep>
        <IgbStep Invalid="true">
            <div class="row-layout step-content_1">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
            </div>
            <p slot="title">Item</p>
        </IgbStep>
        <IgbStep Optional="true">
            <div class="row-layout step-content_1">
                <p class="typography__body-1 text">
                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Consequatur soluta nulla asperiores, officia ullam recusandae voluptatem omnis perferendis vitae non magni magnam praesentium placeat nemo quas repudiandae. Nisi, quo ex!
                </p>
            </div>
            <p slot="title">Wrap</p>
            <p slot="subtitle">(Optional)</p>
        </IgbStep>
    </IgbStepper>
    <div class="row-layout group_1">
        <IgbButton Variant="ButtonVariant.Outlined" Size="SizableComponentSize.Large" @onclick="@(e => _stepper!.PrevAsync())" class="button_1" stepper-scope>
            <span class="material-icons">
                arrow_back
            </span>
            <span>Previous</span>
            <IgbRipple></IgbRipple>
        </IgbButton>
        <IgbButton Variant="ButtonVariant.Outlined" Size="SizableComponentSize.Large" @onclick="@(e => _stepper!.NextAsync())" class="button_1" stepper-scope>
            <span>Next</span>
            <span class="material-icons">
                arrow_forward
            </span>
            <IgbRipple></IgbRipple>
        </IgbButton>
    </div>
</div>

@code {
    private IgbStepper _stepper;
    private List<EmployeesType> _northwindEmployees = new();

    protected override async Task OnInitializedAsync()
    {
        _northwindEmployees = await NorthwindService.GetEmployees();

        await base.OnInitializedAsync();
    }
}
